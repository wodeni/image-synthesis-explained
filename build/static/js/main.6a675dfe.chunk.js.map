{"version":3,"sources":["assets/story.mp4","assets/generator.jpg","Util.js","Story.js","theme.js","Landing.js","MathFoundation.js","Characters.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Video","styled","layout","Box","border","typography","space","color","P","flexbox","Page","div","Cat","text","Dog","Story","fontSize","fontFamily","borderRadius","fontWeight","p","bg","textAlign","width","mx","breakpoints","fonts","body","story","heading","monospace","fontSizes","radii","heights","maxWidths","fontWeights","bold","lineHeights","colors","background","primary","secondary","muted","styles","root","lineHeight","h1","h2","h3","h4","h5","h6","a","pre","overflowX","code","table","borderCollapse","borderSpacing","strong","th","borderBottomStyle","td","img","maxWidth","Heading","SubHead","Landing","props","className","imageSrc","generator","minHeight","opacity","Loss","m","math","Characters","Concept","StoryVid","data-autoplay","loop","src","type","App","scrollOverflow","navigation","licenseKey","render","state","fullpageApi","id","theme","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a675dfe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/story.0dd5cf4f.mp4\";","module.exports = __webpack_public_path__ + \"static/media/generator.2e7931ff.jpg\";","import Emoji from \"react-emoji-render\";\nimport React from \"react\";\nimport {\n  typography,\n  border,\n  layout,\n  flexbox,\n  space,\n  color\n} from \"styled-system\";\nimport styled from \"styled-components\";\n\nexport const Video = styled(\"video\")(layout);\nexport const Box = styled(\"div\")(border, typography, space, color);\nexport const P = styled(\"p\")(typography, space, color, flexbox);\nexport const Page = styled.div`\n  ${color}\n`;\n// const Video = styled(\"video\")(space, flexbox);\nexport const Cat = () => <Emoji text=\":cat:\" />;\nexport const Dog = () => <Emoji text=\":dog:\" />;\n","import * as React from \"react\";\nimport { Box } from \"./Util\";\nimport { Cat, Dog } from \"./Util\";\n\nexport const Story = () => (\n  <Box\n    fontSize={4}\n    fontFamily=\"story\"\n    borderRadius={3}\n    fontWeight=\"bold\"\n    p={3}\n    color=\"white\"\n    bg=\"primary\"\n    textAlign=\"center\"\n    width={2 / 3}\n    mx={6}\n  >\n    A <Cat /> wants to go to a <Dog />\n    -only Halloween party, so she went to the sorceress for help. The sorceress\n    specializes in magically generating\n    <Dog />\n    -looking cats. The key to getting into the party is to pass the <Dog />\n    -ness inspection by another powerful sorceress, so the disguise has to be\n    indistinguishable from other <Dog /> guests.\n  </Box>\n);\n","export default {\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  breakpoints: [32, 48, 64],\n  fonts: {\n    body: \"Open sans, sans-serif\",\n    story: \"Comic sans, sans-serif\",\n    heading: \"Open sans, sans-serif\",\n    monospace: \"Courier, monospace\"\n  },\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96, 150],\n  radii: [0, 2, 4, 16, 9999, \"100%\"],\n  width: [16, 32, 64, 128, 256],\n  heights: [16, 32, 64, 128, 256],\n  maxWidths: [16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  fontWeights: {\n    body: 400,\n    heading: 900,\n    bold: 700\n  },\n  lineHeights: {\n    body: 1.625,\n    heading: 1.25\n  },\n  colors: {\n    text: \"#000\",\n    background: \"#dcc2ee\",\n    primary: \"#609\",\n    secondary: \"#306\",\n    muted: \"#f6f6f6\"\n  },\n  styles: {\n    root: {\n      fontFamily: \"body\",\n      lineHeight: \"body\",\n      fontWeight: \"body\"\n    },\n    h1: {\n      color: \"text\",\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\",\n      fontSize: 8\n    },\n    h2: {\n      color: \"text\",\n      fontFamily: \"heading\",\n      lineHeight: \"body\",\n      fontWeight: \"heading\",\n      fontSize: 4\n    },\n    h3: {\n      color: \"text\",\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\",\n      fontSize: 3\n    },\n    h4: {\n      color: \"text\",\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\",\n      fontSize: 2\n    },\n    h5: {\n      color: \"text\",\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\",\n      fontSize: 1\n    },\n    h6: {\n      color: \"text\",\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\",\n      fontSize: 0\n    },\n    p: {\n      color: \"text\",\n      fontFamily: \"body\",\n      fontWeight: \"body\",\n      lineHeight: \"body\"\n    },\n    a: {\n      color: \"primary\"\n    },\n    pre: {\n      fontFamily: \"monospace\",\n      overflowX: \"auto\",\n      code: {\n        color: \"inherit\"\n      }\n    },\n    code: {\n      fontFamily: \"monospace\",\n      fontSize: \"inherit\"\n    },\n    table: {\n      width: \"100%\",\n      borderCollapse: \"separate\",\n      borderSpacing: 0\n    },\n    strong: {\n      fontFamily: \"body\",\n      fontSize: \"inherit\",\n      fontWeight: \"bold\",\n      color: \"primary\"\n    },\n    th: {\n      textAlign: \"left\",\n      borderBottomStyle: \"solid\"\n    },\n    td: {\n      textAlign: \"left\",\n      borderBottomStyle: \"solid\"\n    },\n    img: {\n      maxWidth: \"100%\"\n    }\n  }\n};\n","import React from \"react\";\nimport generator from \"./assets/generator.jpg\";\nimport LazyHero from \"react-lazy-hero\";\nimport { Cat, Dog } from \"./Util\";\nimport styled from \"styled-components\";\nimport { typography, fontWeight } from \"styled-system\";\n\nconst Heading = styled.h1`\n  ${typography}\n  ${fontWeight}\n  color: white;\n  font-size: 3.5em;\n`;\nconst SubHead = styled.h2`\n  ${typography}\n  ${fontWeight}\n  color: white\n  font-size: 2em;\n`;\n\nexport const Landing = props => (\n  <div className=\"section\">\n    <LazyHero\n      imageSrc={generator}\n      minHeight=\"100vh\"\n      color=\"black\"\n      opacity={0.4}\n    >\n      <Heading>A Visual Introduction to Realistic Image Synthesis</Heading>\n      <SubHead>\n        A tale of <Cat /> and <Dog />\n      </SubHead>\n    </LazyHero>\n  </div>\n);\n","import * as React from \"react\";\nimport { InlineMath, BlockMath } from \"react-katex\";\nimport { P, Box } from \"./Util\";\nimport \"katex/dist/katex.min.css\";\n\nconst loss =\n  \"\\\\min_G \\\\max_D V(D, G)= \\\\mathbb{E}_{x\\\\sim p_{data}(x)}[\\\\log D(x)] + \\\\mathbb{E}_{z\\\\sim p_z(z)}[\\\\log(1 - D(G(z)))]\";\n\nexport const Loss = () => (\n  <Box>\n    <P fontSize={3} m={3}>\n      Mathematically, the loss function is defined as an minimax function:\n      <BlockMath math={loss}></BlockMath>\n    </P>\n  </Box>\n);\n","import * as React from \"react\";\nimport { P } from \"./Util\";\n\nexport const Characters = () => (\n  <P>\n    In the far far magic land, there are two famous sorceress: Gandalf and\n    Dorothy. Gandalf could magically create fake look for animals. Dorothy\n    could...\n  </P>\n);\n","import * as React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { P, Box, Video, Page } from \"./Util\";\nimport { Story } from \"./Story\";\nimport story from \"./assets/story.mp4\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\nimport theme from \"./theme\";\nimport { Landing } from \"./Landing\";\nimport { Loss } from \"./MathFoundation\";\nimport \"./App.css\";\nimport { Characters } from \"./Characters\";\n\nconst Concept = () => (\n  <P m={3} fontSize={3}>\n    <strong>Generative Adversarial Networks</strong> comprise of two models:\n    <ul>\n      <li>\n        The first model is the Generator (Gina) and it aims to generate new data\n        similar to the expected one. The Generator could be assimilated to a\n        human art forger, which creates fake works of art.\n      </li>\n      <li>\n        The second model is the Discriminator (Dorothy). This model’s goal is to\n        recognize if an input data is ‘real’ — belongs to the original dataset —\n        or if it is ‘fake’ — generated by a forger. In this scenario, a\n        Discriminator is analogous to the police (or an art expert), which tries\n        to detect artworks as truthful or fraud.\n      </li>\n    </ul>\n  </P>\n);\n\nconst Math = () => (\n  <P fontFamily=\"body\" mb={[4, 5]} m={3}>\n    <h1>something</h1>\n    <ul>\n      <li>\n        Nash equilibrium: “GAN is based on the zero-sum non-cooperative game. In\n        short, if one wins the other loses. A zero-sum game is also called\n        minimax. Your opponent wants to maximize its actions and your actions\n        are to minimize them. In game theory, the GAN model converges when the\n        discriminator and the generator reach a Nash equilibrium. This is the\n        optimal point for the minimax equation below.”\n      </li>\n      <li>\n        The problem of convergence and different measures of divergence, along\n        with the fact that real GANs are <em>not</em> optimizing towards NE, but\n        rather approximating and minimizing (some measure of) divergence.\n      </li>\n    </ul>\n  </P>\n);\n\nconst StoryVid = () => (\n  <Box textAlign=\"center\">\n    <Video width=\"100vw\" data-autoplay loop>\n      <source src={story} type=\"video/mp4\" />\n    </Video>\n  </Box>\n);\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFullpage\n          scrollOverflow={true}\n          navigation\n          licenseKey={\"YOUR_KEY_HERE\"}\n          render={({ state, fullpageApi }) => {\n            return (\n              <div id=\"fullpage-wrapper\">\n                <ThemeProvider theme={theme}>\n                  <Landing></Landing>\n                  <Page bg=\"background\" className=\"section\">\n                    <Characters />\n                  </Page>\n                  <Page bg=\"background\" className=\"section\">\n                    {/* <StoryVid /> */}\n                    <Story />\n                  </Page>\n                  <Page bg=\"background\" className=\"section\">\n                    <StoryVid />\n                  </Page>\n                  <Page bg=\"background\" className=\"section\">\n                    <Concept />\n                  </Page>\n                  <Page bg=\"background\" className=\"section\">\n                    <Loss />\n                  </Page>\n                </ThemeProvider>\n              </div>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// /* eslint-disable import/no-extraneous-dependencies */\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"fullpage.js/vendors/scrolloverflow\"; // Optional. When using scrollOverflow:true\n// import ReactFullpage from \"@fullpage/react-fullpage\";\n\n// import \"./styles.css\";\n\n// class FullpageWrapper extends React.Component {\n//   onLeave(origin, destination, direction) {\n//     console.log(\"Leaving section \" + origin.index);\n//   }\n//   afterLoad(origin, destination, direction) {\n//     console.log(\"After load: \" + destination.index);\n//   }\n//   render() {\n//     return (\n//       <ReactFullpage\n//         scrollOverflow={true}\n//         sectionsColor={[\"orange\", \"purple\", \"green\"]}\n//         onLeave={this.onLeave.bind(this)}\n//         afterLoad={this.afterLoad.bind(this)}\n//         render={({ state, fullpageApi }) => {\n//           return (\n//             <div id=\"fullpage-wrapper\">\n//               <div className=\"section section1\">\n//                 <h3>Section 1</h3>\n//               </div>\n//               <div className=\"section\">\n//                 <div className=\"slide\">\n//                   <h3>Slide 2.1</h3>\n//                 </div>\n//                 <div className=\"slide\">\n//                   <h3>Slide 2.2</h3>\n//                 </div>\n//                 <div className=\"slide\">\n//                   <h3>Slide 2.3</h3>\n//                 </div>\n//               </div>\n//               <div className=\"section\">\n//                 <h3>Section 3</h3>\n//                 <button onClick={() => fullpageApi.moveTo(1, 0)}>\n//                   Move top\n//                 </button>\n//               </div>\n//             </div>\n//           );\n//         }}\n//       />\n//     );\n//   }\n// }\n\n// ReactDOM.render(<FullpageWrapper />, document.getElementById(\"root\"));\n\n// export default FullpageWrapper;\n"],"sourceRoot":""}