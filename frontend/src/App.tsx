import * as React from "react";
import "katex/dist/katex.min.css";
import { InlineMath, BlockMath } from "react-katex";
import { Landing } from "./Landing";
import { Cat, Dog } from "./Util";
import { ThemeProvider } from "theme-ui";
import theme from "./theme";

const ascii = "\\int_0^\\infty x^2 dx";
const content = `This can be dynamic text (e.g. user-entered) text with ascii math embedded in symbols like $$${ascii}$$`;
const Definition = () => <InlineMath math={ascii} />;

const Story = () => (
  <p>
    A <Cat /> wants to go to a <Dog />
    -only Halloween party, so she went to the sorceress for help. The sorceress
    specializes in magically generating
    <Dog />
    -looking cats. The key to getting into the party is to pass the <Dog />
    -ness inspection by another powerful sorceress, so the disguise has to be
    indistinguishable from other <Dog /> guests.
  </p>
);

const Concept = () => (
  <p>
    Generative Adversarial Networks comprise of two models:
    <li>
      The first model is the Generator (Gina) and it aims to generate new data
      similar to the expected one. The Generator could be assimilated to a human
      art forger, which creates fake works of art.
    </li>
    <li>
      The second model is the Discriminator (Dorothy). This model’s goal is to
      recognize if an input data is ‘real’ — belongs to the original dataset —
      or if it is ‘fake’ — generated by a forger. In this scenario, a
      Discriminator is analogous to the police (or an art expert), which tries
      to detect artworks as truthful or fraud.
    </li>
  </p>
);

class App extends React.Component {
  public render() {
    return (
      <ThemeProvider theme={theme}>
        <Landing></Landing>
        <div>
          <Story />
          <Concept />
          <Definition></Definition>
        </div>
      </ThemeProvider>
    );
  }
}

export default App;
