import * as React from "react";

import "katex/dist/katex.min.css";
import { InlineMath, BlockMath } from "react-katex";
import { ThemeProvider } from "styled-components";
import { P, Box, Video, Page } from "./Util";
import { Story } from "./Story";

import story from "./assets/story.mp4";

import ReactFullpage from "@fullpage/react-fullpage";

import theme from "./theme";
import { Landing } from "./Landing";
import "./App.css";

const ascii = "\\int_0^\\infty x^2 dx";
const Definition = () => (
  <P color="primary">
    Here is some math <InlineMath math={ascii} /> and it's inline. Here is some
    block math:
    <BlockMath math={ascii}></BlockMath>
  </P>
);

const Concept = () => (
  <P fontFamily="body" m={3} fontSize={3}>
    Generative Adversarial Networks comprise of two models:
    <ul>
      <li>
        The first model is the Generator (Gina) and it aims to generate new data
        similar to the expected one. The Generator could be assimilated to a
        human art forger, which creates fake works of art.
      </li>
      <li>
        The second model is the Discriminator (Dorothy). This model’s goal is to
        recognize if an input data is ‘real’ — belongs to the original dataset —
        or if it is ‘fake’ — generated by a forger. In this scenario, a
        Discriminator is analogous to the police (or an art expert), which tries
        to detect artworks as truthful or fraud.
      </li>
    </ul>
  </P>
);

const Math = () => (
  <P fontFamily="body" mb={[4, 5]} m={3}>
    <h1>something</h1>
    <ul>
      <li>
        Nash equilibrium: “GAN is based on the zero-sum non-cooperative game. In
        short, if one wins the other loses. A zero-sum game is also called
        minimax. Your opponent wants to maximize its actions and your actions
        are to minimize them. In game theory, the GAN model converges when the
        discriminator and the generator reach a Nash equilibrium. This is the
        optimal point for the minimax equation below.”
      </li>
      <li>
        The problem of convergence and different measures of divergence, along
        with the fact that real GANs are <em>not</em> optimizing towards NE, but
        rather approximating and minimizing (some measure of) divergence.
      </li>
    </ul>
  </P>
);

const StoryVid = () => (
  <Box m={3} textAlign="center">
    <Video width={1 / 2} data-autoplay loop>
      <source src={story} type="video/mp4" />
    </Video>
  </Box>
);

class App extends React.Component {
  render() {
    return (
      <div className="App">
        <ReactFullpage
          scrollOverflow={true}
          navigation
          licenseKey={"YOUR_KEY_HERE"}
          render={({ state, fullpageApi }) => {
            return (
              <div id="fullpage-wrapper">
                <ThemeProvider theme={theme}>
                  <Landing></Landing>
                  <Page bg="background" className="section">
                    <Story />
                    <StoryVid />
                  </Page>
                  <Page bg="background" className="section">
                    <Concept />
                  </Page>
                  <Page bg="background" className="section">
                    <Definition />
                    <Math />
                  </Page>
                </ThemeProvider>
              </div>
            );
          }}
        />
      </div>
    );
  }
}

export default App;
